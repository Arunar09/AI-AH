---
# Ansible Playbook: MinIO Setup and Configuration
# This playbook sets up MinIO client and configures buckets for agent training

- name: Setup MinIO for Agent Training
  hosts: localhost
  connection: local
  vars:
    minio_endpoint: "http://localhost:9000"
    minio_access_key: "minioadmin"
    minio_secret_key: "minioadmin123"
    minio_buckets:
      - name: "terraform-state"
        purpose: "Terraform remote state storage"
      - name: "ansible-artifacts"
        purpose: "Ansible playbook artifacts and logs"
      - name: "kubernetes-backups"
        purpose: "Kubernetes cluster backups"
      - name: "security-reports"
        purpose: "Security scan reports and compliance data"
      - name: "monitoring-data"
        purpose: "Monitoring metrics and logs"
      - name: "ai-training-data"
        purpose: "AI model training data and artifacts"

  tasks:
    - name: Install MinIO client
      block:
        - name: Download MinIO client
          get_url:
            url: "https://dl.min.io/client/mc/release/linux-amd64/mc"
            dest: "/usr/local/bin/mc"
            mode: '0755'
          when: ansible_os_family == "RedHat"
        
        - name: Download MinIO client for Ubuntu
          get_url:
            url: "https://dl.min.io/client/mc/release/linux-amd64/mc"
            dest: "/usr/local/bin/mc"
            mode: '0755'
          when: ansible_os_family == "Debian"

    - name: Configure MinIO alias
      shell: |
        /usr/local/bin/mc alias set local {{ minio_endpoint }} {{ minio_access_key }} {{ minio_secret_key }}
      register: alias_result
      changed_when: alias_result.rc == 0

    - name: Wait for MinIO to be ready
      uri:
        url: "{{ minio_endpoint }}/minio/health/live"
        method: GET
      register: minio_health
      until: minio_health.status == 200
      retries: 30
      delay: 2

    - name: Create MinIO buckets
      shell: |
        /usr/local/bin/mc mb local/{{ item.name }} --ignore-existing
      loop: "{{ minio_buckets }}"
      register: bucket_result
      changed_when: bucket_result.rc == 0

    - name: Set bucket policies
      shell: |
        /usr/local/bin/mc policy set public local/{{ item.name }}
      loop: "{{ minio_buckets }}"
      when: item.name in ['ai-training-data', 'monitoring-data']
      register: policy_result
      changed_when: policy_result.rc == 0

    - name: Create test objects in buckets
      shell: |
        echo "Test data for {{ item.name }}" | /usr/local/bin/mc pipe local/{{ item.name }}/test.txt
      loop: "{{ minio_buckets }}"
      register: test_object_result
      changed_when: test_object_result.rc == 0

    - name: List created buckets
      shell: |
        /usr/local/bin/mc ls local/
      register: bucket_list
      changed_when: false

    - name: Display bucket information
      debug:
        msg: |
          MinIO Setup Complete!
          Endpoint: {{ minio_endpoint }}
          Buckets created:
          {% for bucket in minio_buckets %}
          - {{ bucket.name }}: {{ bucket.purpose }}
          {% endfor %}
          
          Bucket list:
          {{ bucket_list.stdout }}

    - name: Create MinIO configuration file for agents
      template:
        src: minio-config.j2
        dest: /tmp/minio-config.json
      vars:
        minio_config:
          endpoint: "{{ minio_endpoint }}"
          access_key: "{{ minio_access_key }}"
          secret_key: "{{ minio_secret_key }}"
          buckets: "{{ minio_buckets }}"

    - name: Display MinIO configuration
      debug:
        msg: "MinIO configuration saved to /tmp/minio-config.json"
